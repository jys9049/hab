events {}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main; # 디버깅용
    error_log   /var/log/nginx/error.log   warn; # 디버깅용

    sendfile        on;
    keepalive_timeout  65;

    # HTTP 서버 블록: HTTP -> HTTPS 리다이렉션
    server {
        listen 80;
        server_name hab.jeongyongseong.kr;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS 서버 블록
    server {
        listen 443 ssl; # http2 경고를 피하기 위해 http2 on; 으로 분리 권장
        http2 on;
        server_name hab.jeongyongseong.kr;

        # SSL 인증서 경로 (docker-compose.yml에서 마운트될 경로)
        ssl_certificate /etc/letsencrypt/live/hab.jeongyongseong.kr/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/hab.jeongyongseong.kr/privkey.pem;

        # SSL 보안 설정 (권장)
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Next.js 정적 파일 처리
        location /_next/static/ {
            alias /app/.next/static/; # docker-compose.yml에서 nginx 서비스에 마운트된 next-static 볼륨의 경로
            expires 1y;
            access_log off;
            add_header Cache-Control "public, immutable";
        }

        # 나머지 모든 요청을 Next.js 애플리케이션으로 전달
        location / {
            proxy_pass http://web:3000; # "web"은 docker-compose.yml의 Next.js 서비스 이름
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade"; # WebSocket 지원
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 600s; # 필요에 따라 조절
            proxy_connect_timeout 600s; # 필요에 따라 조절
        }
    }
}